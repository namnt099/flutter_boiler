name: Deploy to Firebase

on:
  workflow_dispatch:
    inputs:
      FLAVOR:
        description: 'Select the flavor (develop or product)'
        required: true
        default: 'product'
        type: choice
        options:
          - develop
          - product
jobs:

  integration-test:
    name: Run integration test
    runs-on: ubuntu-latest
    env:
      FLAVOR: ${{ github.event.inputs.FLAVOR }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0

      - name: Install dependencies
        run: flutter pub get

      - name: Install system libs
        run: sudo apt-get install -y libgl1-mesa-dev
  
      - name: Restart ADB server
        run: |
          adb kill-server
          adb start-server
          adb devices

      - name: Run integration test on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          script: |
          echo '⏳ Waiting for emulator to fully boot...'
          boot_completed=""
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$(adb -e shell getprop sys.boot_completed 2>/dev/null | tr -d '')
            sleep 2
          done
          echo '✅ Emulator booted! Starting test...'
            flutter drive \
              --driver=test_driver/integration_test.dart \
              --target=lib/main_${{ env.FLAVOR }}.dart \
              --flavor $FLAVOR \
              --target-platform android-arm64

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [integration-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0  # Chọn phiên bản Flutter phù hợp với dự án của bạn

      - name: Install dependencies
        run: flutter pub get
      
      - name: Run unit & widget tests
        run: flutter test

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Install Fastlane
        run: gem install fastlane --user-install

      - name: Install Fastlane Plugin for Firebase
        run: |
          export GEM_HOME="$HOME/.gem"
          export PATH="$GEM_HOME/bin:$PATH"
          gem install fastlane-plugin-firebase_app_distribution --user-install

      - name: Set environment variables
        run: |
          if [[ "${{ github.event.inputs.FLAVOR }}" == "develop" ]]; then
            echo "${{ secrets.DOTENV_DEVELOP }}" > .env.develop
          else
            echo "${{ secrets.DOTENV_PRODUCT }}" > .env.product
          fi

      - name: Set Firebase CLI Token
        run: echo "${{ secrets.FIREBASE_TOKEN }}" > "$HOME/.firebase_token"
      
      - name: Set environment variables
        run: |
          if [[ "${{ github.event.inputs.FLAVOR }}" == "develop" ]]; then
            echo "${{ secrets.DOTENV_DEVELOP }}" > .env.develop
          else
            echo "${{ secrets.DOTENV_PRODUCT }}" > .env.product
          fi

      - name: Get APP_ID from secret
        run: |
          if [[ "${{ github.event.inputs.FLAVOR }}" == "develop" ]]; then
            echo "APP_ID=$(echo '${{ secrets.DOTENV_DEVELOP }}' | grep 'APP_ID' | cut -d '=' -f2)" >> $GITHUB_ENV
          else
            echo "APP_ID=$(echo '${{ secrets.DOTENV_PRODUCT }}' | grep 'APP_ID' | cut -d '=' -f2)" >> $GITHUB_ENV
          fi


      - name: Create signing folder
        run: mkdir -p android/app/signing/

      - name: Decode Keystore
        run: |
          echo -n "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/signing/release_key.jks

      - name: Decode key.properties
        run: |
          echo -n "${{ secrets.KEY_PROPERTIES_BASE64 }}" | base64 --decode > android/key.properties
      
      - name: Debug GitHub Inputs
        run: |
          echo "FLAVOR selected: ${{ github.event.inputs.FLAVOR }}"

      - name: Build APK for the selected flavor
        run: |
          flutter build apk --release --flavor ${{ github.event.inputs.FLAVOR }} --target=lib/main_${{ github.event.inputs.FLAVOR }}.dart

      - name: Deploy to Firebase using Fastlane
        run: cd android && fastlane android deploy_firebase
        env:
          FLAVOR: "${{ github.event.inputs.FLAVOR }}"
          FIREBASE_TOKEN: "${{ secrets.FIREBASE_TOKEN }}"
          APP_ID: "${{ env.APP_ID }}"



